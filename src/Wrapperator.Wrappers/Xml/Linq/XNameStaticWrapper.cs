//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wrapperator.Wrappers.Xml.Linq
{
  
  
  /// <summary>Represents a name of an XML element or attribute. </summary>
  public class XNameStaticWrapper : Wrapperator.Interfaces.Xml.Linq.IXNameStatic
  {
    
    internal XNameStaticWrapper()
    {
    }
    
    /// <summary>Gets an <see cref="T:System.Xml.Linq.XName" /> object from an expanded name.</summary>
    /// <returns>An <see cref="T:System.Xml.Linq.XName" /> object constructed from the expanded name.</returns>
    /// <param name="expandedName">A <see cref="T:System.String" /> that contains an expanded XML name in the format {namespace}localname.</param>
    public Wrapperator.Interfaces.Xml.Linq.IXName Get(string expandedName)
    {
      return new Wrapperator.Wrappers.Xml.Linq.XNameWrapper(System.Xml.Linq.XName.Get(expandedName));
    }
    
    /// <summary>Gets an <see cref="T:System.Xml.Linq.XName" /> object from a local name and a namespace.</summary>
    /// <returns>An <see cref="T:System.Xml.Linq.XName" /> object created from the specified local name and namespace.</returns>
    /// <param name="localName">A local (unqualified) name.</param>
    /// <param name="namespaceName">An XML namespace.</param>
    public Wrapperator.Interfaces.Xml.Linq.IXName Get(string localName, string namespaceName)
    {
      return new Wrapperator.Wrappers.Xml.Linq.XNameWrapper(System.Xml.Linq.XName.Get(localName, namespaceName));
    }
  }
}
