//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wrapperator.Wrappers.Diagnostics
{
  
  
  /// <summary>Provides a set of methods and properties that you can use to accurately measure elapsed time.</summary>
  /// <filterpriority>1</filterpriority>
  public class StopwatchStaticWrapper : Wrapperator.Interfaces.Diagnostics.IStopwatchStatic
  {
    
    internal StopwatchStaticWrapper()
    {
    }
    
    /// <summary>Initializes a new <see cref="T:System.Diagnostics.Stopwatch" /> instance, sets the elapsed time property to zero, and starts measuring elapsed time.</summary>
    /// <returns>A <see cref="T:System.Diagnostics.Stopwatch" /> that has just begun measuring elapsed time.</returns>
    /// <filterpriority>1</filterpriority>
    public Wrapperator.Interfaces.Diagnostics.IStopwatch StartNew()
    {
      return new Wrapperator.Wrappers.Diagnostics.StopwatchWrapper(System.Diagnostics.Stopwatch.StartNew());
    }
    
    /// <summary>Gets the current number of ticks in the timer mechanism.</summary>
    /// <returns>A long integer representing the tick counter value of the underlying timer mechanism.</returns>
    /// <filterpriority>1</filterpriority>
    public long GetTimestamp()
    {
      return System.Diagnostics.Stopwatch.GetTimestamp();
    }
  }
}
