//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wrapperator.Wrappers.Configuration
{
  
  
  /// <summary>Contains meta-information about an individual element within the configuration. This class cannot be inherited.</summary>
  public class ElementInformationWrapper : Wrapperator.Interfaces.Configuration.IElementInformation
  {
    
    internal System.Configuration.ElementInformation ElementInformation { get; private set; }

    
    internal ElementInformationWrapper(System.Configuration.ElementInformation elementInformation)
    {
      ElementInformation = elementInformation;
    }
    
    public Wrapperator.Interfaces.Configuration.IPropertyInformationCollection Properties
    {
      get
      {
        return new Wrapperator.Wrappers.Configuration.PropertyInformationCollectionWrapper(ElementInformation.Properties);
      }
    }
    
    public bool IsPresent
    {
      get
      {
        return ElementInformation.IsPresent;
      }
    }
    
    public bool IsLocked
    {
      get
      {
        return ElementInformation.IsLocked;
      }
    }
    
    public bool IsCollection
    {
      get
      {
        return ElementInformation.IsCollection;
      }
    }
    
    public string Source
    {
      get
      {
        return ElementInformation.Source;
      }
    }
    
    public int LineNumber
    {
      get
      {
        return ElementInformation.LineNumber;
      }
    }
    
    public Wrapperator.Interfaces.IType Type
    {
      get
      {
        return new Wrapperator.Wrappers.TypeWrapper(ElementInformation.Type);
      }
    }
    
    public System.Configuration.ConfigurationValidatorBase Validator
    {
      get
      {
        return ElementInformation.Validator;
      }
    }
    
    public System.Collections.ICollection Errors
    {
      get
      {
        return ElementInformation.Errors;
      }
    }
  }
}
