//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wrapperator.Wrappers.Configuration
{
  
  
  /// <summary>Provides access to configuration files for client applications. This class cannot be inherited.</summary>
  public partial class ConfigurationManagerWrapper : Wrapperator.Interfaces.Configuration.IConfigurationManager
  {
    
    /// <summary>Retrieves a specified configuration section for the current application's default configuration.</summary>
    /// <returns>The specified <see cref="T:System.Configuration.ConfigurationSection" /> object, or null if the section does not exist.</returns>
    /// <param name="sectionName">The configuration section path and name.</param>
    /// <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration file could not be loaded.</exception>
    public object GetSection(string sectionName)
    {
      return System.Configuration.ConfigurationManager.GetSection(sectionName);
    }
    
    /// <summary>Opens the configuration file for the current application as a <see cref="T:System.Configuration.Configuration" /> object.</summary>
    /// <returns>A <see cref="T:System.Configuration.Configuration" /> object.</returns>
    /// <param name="userLevel">The <see cref="T:System.Configuration.ConfigurationUserLevel" /> for which you are opening the configuration.</param>
    /// <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration file could not be loaded.</exception>
    public Wrapperator.Interfaces.Configuration.IConfiguration OpenExeConfiguration(System.Configuration.ConfigurationUserLevel userLevel)
    {
      return new Wrapperator.Wrappers.Configuration.ConfigurationWrapper(System.Configuration.ConfigurationManager.OpenExeConfiguration(userLevel));
    }
    
    /// <summary>Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object.</summary>
    /// <returns>A <see cref="T:System.Configuration.Configuration" /> object.</returns>
    /// <param name="exePath">The path of the executable (exe) file.</param>
    /// <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration file could not be loaded.</exception>
    public Wrapperator.Interfaces.Configuration.IConfiguration OpenExeConfiguration(string exePath)
    {
      return new Wrapperator.Wrappers.Configuration.ConfigurationWrapper(System.Configuration.ConfigurationManager.OpenExeConfiguration(exePath));
    }
    
    /// <summary>Opens the machine configuration file on the current computer as a <see cref="T:System.Configuration.Configuration" /> object.</summary>
    /// <returns>A <see cref="T:System.Configuration.Configuration" /> object.</returns>
    /// <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration file could not be loaded.</exception>
    public Wrapperator.Interfaces.Configuration.IConfiguration OpenMachineConfiguration()
    {
      return new Wrapperator.Wrappers.Configuration.ConfigurationWrapper(System.Configuration.ConfigurationManager.OpenMachineConfiguration());
    }
    
    /// <summary>Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object that uses the specified file mapping and user level.</summary>
    /// <returns>The configuration object.</returns>
    /// <param name="fileMap">An <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object that references configuration file to use instead of the application default configuration file.</param>
    /// <param name="userLevel">The <see cref="T:System.Configuration.ConfigurationUserLevel" /> object for which you are opening the configuration.</param>
    /// <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration file could not be loaded.</exception>
    public Wrapperator.Interfaces.Configuration.IConfiguration OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap fileMap, System.Configuration.ConfigurationUserLevel userLevel)
    {
      return new Wrapperator.Wrappers.Configuration.ConfigurationWrapper(System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(fileMap, userLevel));
    }
    
    /// <summary>Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object that uses the specified file mapping, user level, and preload option.</summary>
    /// <returns>The configuration object.</returns>
    /// <param name="fileMap">An <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object that references the configuration file to use instead of the default application configuration file.</param>
    /// <param name="userLevel">The <see cref="T:System.Configuration.ConfigurationUserLevel" /> object for which you are opening the configuration.</param>
    /// <param name="preLoad">true to preload all section groups and sections; otherwise, false.</param>
    /// <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration file could not be loaded.</exception>
    public Wrapperator.Interfaces.Configuration.IConfiguration OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap fileMap, System.Configuration.ConfigurationUserLevel userLevel, bool preLoad)
    {
      return new Wrapperator.Wrappers.Configuration.ConfigurationWrapper(System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(fileMap, userLevel, preLoad));
    }
    
    /// <summary>Opens the machine configuration file as a <see cref="T:System.Configuration.Configuration" /> object that uses the specified file mapping.</summary>
    /// <returns>A <see cref="T:System.Configuration.Configuration" /> object.</returns>
    /// <param name="fileMap">An <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object that references configuration file to use instead of the application default configuration file.</param>
    /// <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration file could not be loaded.</exception>
    public Wrapperator.Interfaces.Configuration.IConfiguration OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap fileMap)
    {
      return new Wrapperator.Wrappers.Configuration.ConfigurationWrapper(System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration(fileMap));
    }
    
    /// <summary>Refreshes the named section so the next time that it is retrieved it will be re-read from disk.</summary>
    /// <param name="sectionName">The configuration section name or the configuration path and section name of the section to refresh.</param>
    public void RefreshSection(string sectionName)
    {
      System.Configuration.ConfigurationManager.RefreshSection(sectionName);
    }
  }
}
