//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wrapperator.Interfaces.Configuration
{
  
  
  /// <summary>Is the base class to create providers for encrypting and decrypting protected-configuration data.</summary>
  public interface IProtectedConfigurationProvider
  {
    
    /// <summary>Provides access to the wrapped instance. Should not be used most of the time.</summary>
    System.Configuration.ProtectedConfigurationProvider _ProtectedConfigurationProvider
    {
      get;
    }
    
    string Name
    {
      get;
    }
    
    string Description
    {
      get;
    }
    
    /// <summary>Encrypts the passed <see cref="T:System.Xml.XmlNode" /> object from a configuration file.</summary>
    /// <returns>The <see cref="T:System.Xml.XmlNode" /> object containing encrypted data.</returns>
    /// <param name="node">The <see cref="T:System.Xml.XmlNode" /> object to encrypt.</param>
    System.Xml.XmlNode Encrypt(System.Xml.XmlNode node);
    
    /// <summary>Decrypts the passed <see cref="T:System.Xml.XmlNode" /> object from a configuration file.</summary>
    /// <returns>The <see cref="T:System.Xml.XmlNode" /> object containing decrypted data.</returns>
    /// <param name="encryptedNode">The <see cref="T:System.Xml.XmlNode" /> object to decrypt.</param>
    System.Xml.XmlNode Decrypt(System.Xml.XmlNode encryptedNode);
    
    /// <summary>Initializes the provider.</summary>
    /// <param name="name">The friendly name of the provider.</param>
    /// <param name="config">A collection of the name/value pairs representing the provider-specific attributes specified in the configuration for this provider.</param>
    /// <exception cref="T:System.ArgumentNullException">The name of the provider is null.</exception>
    /// <exception cref="T:System.ArgumentException">The name of the provider has a length of zero.</exception>
    /// <exception cref="T:System.InvalidOperationException">An attempt is made to call <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> on a provider after the provider has already been initialized.</exception>
    void Initialize(string name, Wrapperator.Interfaces.Collections.Specialized.INameValueCollection config);
  }
}
