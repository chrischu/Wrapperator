//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wrapperator.Interfaces.Configuration
{
  
  
  /// <summary>Contains a collection of <see cref="T:System.Configuration.KeyValueConfigurationElement" /> objects. </summary>
  public interface IKeyValueConfigurationCollection
  {
    
    Wrapperator.Interfaces.Configuration.IKeyValueConfigurationElement this[string key]
    {
      get;
    }
    
    string[] AllKeys
    {
      get;
    }
    
    int Count
    {
      get;
    }
    
    bool EmitClear
    {
      get;
      set;
    }
    
    bool IsSynchronized
    {
      get;
    }
    
    object SyncRoot
    {
      get;
    }
    
    System.Configuration.ConfigurationElementCollectionType CollectionType
    {
      get;
    }
    
    Wrapperator.Interfaces.Configuration.IConfigurationLockCollection LockAttributes
    {
      get;
    }
    
    Wrapperator.Interfaces.Configuration.IConfigurationLockCollection LockAllAttributesExcept
    {
      get;
    }
    
    Wrapperator.Interfaces.Configuration.IConfigurationLockCollection LockElements
    {
      get;
    }
    
    Wrapperator.Interfaces.Configuration.IConfigurationLockCollection LockAllElementsExcept
    {
      get;
    }
    
    bool LockItem
    {
      get;
      set;
    }
    
    Wrapperator.Interfaces.Configuration.IElementInformation ElementInformation
    {
      get;
    }
    
    Wrapperator.Interfaces.Configuration.IConfiguration CurrentConfiguration
    {
      get;
    }
    
    /// <summary>Adds a <see cref="T:System.Configuration.KeyValueConfigurationElement" /> object to the collection based on the supplied parameters.</summary>
    /// <param name="keyValue">A <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</param>
    void Add(Wrapperator.Interfaces.Configuration.IKeyValueConfigurationElement keyValue);
    
    /// <summary>Adds a <see cref="T:System.Configuration.KeyValueConfigurationElement" /> object to the collection based on the supplied parameters.</summary>
    /// <param name="key">A string specifying the key.</param>
    /// <param name="value">A string specifying the value.</param>
    void Add(string key, string value);
    
    /// <summary>Removes a <see cref="T:System.Configuration.KeyValueConfigurationElement" /> object from the collection.</summary>
    /// <param name="key">A string specifying the <paramref name="key" />.</param>
    void Remove(string key);
    
    /// <summary>Clears the <see cref="T:System.Configuration.KeyValueConfigurationCollection" /> collection.</summary>
    void Clear();
    
    /// <summary>Indicates whether the <see cref="T:System.Configuration.ConfigurationElementCollection" /> object is read only.</summary>
    /// <returns>true if the <see cref="T:System.Configuration.ConfigurationElementCollection" /> object is read only; otherwise, false.</returns>
    bool IsReadOnly();
    
    /// <summary>Copies the contents of the <see cref="T:System.Configuration.ConfigurationElementCollection" /> to an array.</summary>
    /// <param name="array">Array to which to copy the contents of the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</param>
    /// <param name="index">Index location at which to begin copying.</param>
    void CopyTo(System.Configuration.ConfigurationElement[] array, int index);
    
    /// <summary>Gets an <see cref="T:System.Collections.IEnumerator" /> which is used to iterate through the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
    /// <returns>An <see cref="T:System.Collections.IEnumerator" /> which is used to iterate through the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</returns>
    System.Collections.IEnumerator GetEnumerator();
  }
}
