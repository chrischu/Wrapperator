//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wrapperator.Interfaces.Xml.Linq
{
  
  
  /// <summary>Represents an XML document. For the components and usage of an <see cref="T:System.Xml.Linq.XDocument" /> object, see XDocument Class Overview.</summary>
  public partial interface IXDocument
  {
    
    string BaseUri
    {
      get;
    }
    
    System.Xml.Linq.XDeclaration Declaration
    {
      get;
      set;
    }
    
    System.Xml.Linq.XDocument Document
    {
      get;
    }
    
    System.Xml.Linq.XDocumentType DocumentType
    {
      get;
    }
    
    System.Xml.Linq.XNode FirstNode
    {
      get;
    }
    
    System.Xml.Linq.XNode LastNode
    {
      get;
    }
    
    System.Xml.Linq.XNode NextNode
    {
      get;
    }
    
    System.Xml.XmlNodeType NodeType
    {
      get;
    }
    
    System.Xml.Linq.XElement Parent
    {
      get;
    }
    
    System.Xml.Linq.XNode PreviousNode
    {
      get;
    }
    
    System.Xml.Linq.XElement Root
    {
      get;
    }
    
    /// <summary>Creates a new <see cref="T:System.Xml.Linq.XDocument" /> from a file. </summary>
    /// <returns>An <see cref="T:System.Xml.Linq.XDocument" /> that contains the contents of the specified file.</returns>
    /// <param name="uri">A URI string that references the file to load into a new <see cref="T:System.Xml.Linq.XDocument" />.</param>
    Wrapperator.Interfaces.Xml.Linq.IXDocument Load(string uri);
    
    /// <summary>Creates a new <see cref="T:System.Xml.Linq.XDocument" /> from a file, optionally preserving white space, setting the base URI, and retaining line information.</summary>
    /// <returns>An <see cref="T:System.Xml.Linq.XDocument" /> that contains the contents of the specified file.</returns>
    /// <param name="uri">A URI string that references the file to load into a new <see cref="T:System.Xml.Linq.XDocument" />.</param>
    /// <param name="options">A <see cref="T:System.Xml.Linq.LoadOptions" /> that specifies white space behavior, and whether to load base URI and line information.</param>
    Wrapperator.Interfaces.Xml.Linq.IXDocument Load(string uri, System.Xml.Linq.LoadOptions options);
    
    /// <summary>Creates a new <see cref="T:System.Xml.Linq.XDocument" /> instance by using the specified stream.</summary>
    /// <returns>An <see cref="T:System.Xml.Linq.XDocument" /> object that reads the data that is contained in the stream. </returns>
    /// <param name="stream">The stream that contains the XML data.</param>
    Wrapperator.Interfaces.Xml.Linq.IXDocument Load(System.IO.Stream stream);
    
    /// <summary>Creates a new <see cref="T:System.Xml.Linq.XDocument" /> instance by using the specified stream, optionally preserving white space, setting the base URI, and retaining line information.</summary>
    /// <returns>An <see cref="T:System.Xml.Linq.XDocument" /> object that reads the data that is contained in the stream.</returns>
    /// <param name="stream">The stream containing the XML data.</param>
    /// <param name="options">A <see cref="T:System.Xml.Linq.LoadOptions" /> that specifies whether to load base URI and line information.</param>
    Wrapperator.Interfaces.Xml.Linq.IXDocument Load(System.IO.Stream stream, System.Xml.Linq.LoadOptions options);
    
    /// <summary>Creates a new <see cref="T:System.Xml.Linq.XDocument" /> from a <see cref="T:System.IO.TextReader" />. </summary>
    /// <returns>An <see cref="T:System.Xml.Linq.XDocument" /> that contains the contents of the specified <see cref="T:System.IO.TextReader" />.</returns>
    /// <param name="textReader">A <see cref="T:System.IO.TextReader" /> that contains the content for the <see cref="T:System.Xml.Linq.XDocument" />.</param>
    Wrapperator.Interfaces.Xml.Linq.IXDocument Load(System.IO.TextReader textReader);
    
    /// <summary>Creates a new <see cref="T:System.Xml.Linq.XDocument" /> from a <see cref="T:System.IO.TextReader" />, optionally preserving white space, setting the base URI, and retaining line information.</summary>
    /// <returns>An <see cref="T:System.Xml.Linq.XDocument" /> that contains the XML that was read from the specified <see cref="T:System.IO.TextReader" />.</returns>
    /// <param name="textReader">A <see cref="T:System.IO.TextReader" /> that contains the content for the <see cref="T:System.Xml.Linq.XDocument" />.</param>
    /// <param name="options">A <see cref="T:System.Xml.Linq.LoadOptions" /> that specifies white space behavior, and whether to load base URI and line information.</param>
    Wrapperator.Interfaces.Xml.Linq.IXDocument Load(System.IO.TextReader textReader, System.Xml.Linq.LoadOptions options);
    
    /// <summary>Creates a new <see cref="T:System.Xml.Linq.XDocument" /> from an <see cref="T:System.Xml.XmlReader" />. </summary>
    /// <returns>An <see cref="T:System.Xml.Linq.XDocument" /> that contains the contents of the specified <see cref="T:System.Xml.XmlReader" />.</returns>
    /// <param name="reader">A <see cref="T:System.Xml.XmlReader" /> that contains the content for the <see cref="T:System.Xml.Linq.XDocument" />.</param>
    Wrapperator.Interfaces.Xml.Linq.IXDocument Load(System.Xml.XmlReader reader);
    
    /// <summary>Loads an <see cref="T:System.Xml.Linq.XDocument" /> from an <see cref="T:System.Xml.XmlReader" />, optionally setting the base URI, and retaining line information.</summary>
    /// <returns>An <see cref="T:System.Xml.Linq.XDocument" /> that contains the XML that was read from the specified <see cref="T:System.Xml.XmlReader" />.</returns>
    /// <param name="reader">A <see cref="T:System.Xml.XmlReader" /> that will be read for the content of the <see cref="T:System.Xml.Linq.XDocument" />.</param>
    /// <param name="options">A <see cref="T:System.Xml.Linq.LoadOptions" /> that specifies whether to load base URI and line information.</param>
    Wrapperator.Interfaces.Xml.Linq.IXDocument Load(System.Xml.XmlReader reader, System.Xml.Linq.LoadOptions options);
    
    /// <summary>Creates a new <see cref="T:System.Xml.Linq.XDocument" /> from a string.</summary>
    /// <returns>An <see cref="T:System.Xml.Linq.XDocument" /> populated from the string that contains XML.</returns>
    /// <param name="text">A string that contains XML.</param>
    Wrapperator.Interfaces.Xml.Linq.IXDocument Parse(string text);
    
    /// <summary>Creates a new <see cref="T:System.Xml.Linq.XDocument" /> from a string, optionally preserving white space, setting the base URI, and retaining line information.</summary>
    /// <returns>An <see cref="T:System.Xml.Linq.XDocument" /> populated from the string that contains XML.</returns>
    /// <param name="text">A string that contains XML.</param>
    /// <param name="options">A <see cref="T:System.Xml.Linq.LoadOptions" /> that specifies white space behavior, and whether to load base URI and line information.</param>
    Wrapperator.Interfaces.Xml.Linq.IXDocument Parse(string text, System.Xml.Linq.LoadOptions options);
    
    /// <summary>Serialize this <see cref="T:System.Xml.Linq.XDocument" /> to a file, overwriting an existing file, if it exists.</summary>
    /// <param name="fileName">A string that contains the name of the file.</param>
    void Save(string fileName);
    
    /// <summary>Serialize this <see cref="T:System.Xml.Linq.XDocument" /> to a file, optionally disabling formatting.</summary>
    /// <param name="fileName">A string that contains the name of the file.</param>
    /// <param name="options">A <see cref="T:System.Xml.Linq.SaveOptions" /> that specifies formatting behavior.</param>
    void Save(string fileName, System.Xml.Linq.SaveOptions options);
    
    /// <summary>Outputs this <see cref="T:System.Xml.Linq.XDocument" /> to the specified <see cref="T:System.IO.Stream" />.</summary>
    /// <param name="stream">The stream to output this <see cref="T:System.Xml.Linq.XDocument" /> to.</param>
    void Save(System.IO.Stream stream);
    
    /// <summary>Outputs this <see cref="T:System.Xml.Linq.XDocument" /> to the specified <see cref="T:System.IO.Stream" />, optionally specifying formatting behavior.</summary>
    /// <param name="stream">The stream to output this <see cref="T:System.Xml.Linq.XDocument" /> to.</param>
    /// <param name="options">A <see cref="T:System.Xml.Linq.SaveOptions" /> that specifies formatting behavior.</param>
    void Save(System.IO.Stream stream, System.Xml.Linq.SaveOptions options);
    
    /// <summary>Serialize this <see cref="T:System.Xml.Linq.XDocument" /> to a <see cref="T:System.IO.TextWriter" />.</summary>
    /// <param name="textWriter">A <see cref="T:System.IO.TextWriter" /> that the <see cref="T:System.Xml.Linq.XDocument" /> will be written to.</param>
    void Save(System.IO.TextWriter textWriter);
    
    /// <summary>Serialize this <see cref="T:System.Xml.Linq.XDocument" /> to a <see cref="T:System.IO.TextWriter" />, optionally disabling formatting.</summary>
    /// <param name="textWriter">The <see cref="T:System.IO.TextWriter" /> to output the XML to.</param>
    /// <param name="options">A <see cref="T:System.Xml.Linq.SaveOptions" /> that specifies formatting behavior.</param>
    void Save(System.IO.TextWriter textWriter, System.Xml.Linq.SaveOptions options);
    
    /// <summary>Serialize this <see cref="T:System.Xml.Linq.XDocument" /> to an <see cref="T:System.Xml.XmlWriter" />.</summary>
    /// <param name="writer">A <see cref="T:System.Xml.XmlWriter" /> that the <see cref="T:System.Xml.Linq.XDocument" /> will be written to.</param>
    void Save(System.Xml.XmlWriter writer);
    
    /// <summary>Write this document to an <see cref="T:System.Xml.XmlWriter" />.</summary>
    /// <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> into which this method will write.</param>
    /// <filterpriority>2</filterpriority>
    void WriteTo(System.Xml.XmlWriter writer);
  }
}
