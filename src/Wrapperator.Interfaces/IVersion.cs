//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wrapperator.Interfaces
{
  
  
  /// <summary>Represents the version number of an assembly, operating system, or the common language runtime. This class cannot be inherited.</summary>
  /// <filterpriority>1</filterpriority>
  public interface IVersion
  {
    
    /// <summary>Provides access to the wrapped instance. Should not be used most of the time.</summary>
    System.Version _Version
    {
      get;
    }
    
    int Major
    {
      get;
    }
    
    int Minor
    {
      get;
    }
    
    int Build
    {
      get;
    }
    
    int Revision
    {
      get;
    }
    
    short MajorRevision
    {
      get;
    }
    
    short MinorRevision
    {
      get;
    }
    
    /// <summary>Returns a new <see cref="T:System.Version" /> object whose value is the same as the current <see cref="T:System.Version" /> object.</summary>
    /// <returns>A new <see cref="T:System.Object" /> whose values are a copy of the current <see cref="T:System.Version" /> object.</returns>
    /// <filterpriority>2</filterpriority>
    object Clone();
    
    /// <summary>Compares the current <see cref="T:System.Version" /> object to a specified object and returns an indication of their relative values.</summary>
    /// <returns>A signed integer that indicates the relative values of the two objects, as shown in the following table.Return value Meaning Less than zero The current <see cref="T:System.Version" /> object is a version before <paramref name="version" />. Zero The current <see cref="T:System.Version" /> object is the same version as <paramref name="version" />. Greater than zero The current <see cref="T:System.Version" /> object is a version subsequent to <paramref name="version" />.-or- <paramref name="version" /> is null. </returns>
    /// <param name="version">An object to compare, or null. </param>
    /// <exception cref="T:System.ArgumentException">
    ///  <paramref name="version" /> is not of type <see cref="T:System.Version" />. </exception>
    /// <filterpriority>1</filterpriority>
    int CompareTo(object version);
    
    /// <summary>Compares the current <see cref="T:System.Version" /> object to a specified <see cref="T:System.Version" /> object and returns an indication of their relative values.</summary>
    /// <returns>A signed integer that indicates the relative values of the two objects, as shown in the following table.Return value Meaning Less than zero The current <see cref="T:System.Version" /> object is a version before <paramref name="value" />. Zero The current <see cref="T:System.Version" /> object is the same version as <paramref name="value" />. Greater than zero The current <see cref="T:System.Version" /> object is a version subsequent to <paramref name="value" />. -or-<paramref name="value" /> is null.</returns>
    /// <param name="value">A <see cref="T:System.Version" /> object to compare to the current <see cref="T:System.Version" /> object, or null.</param>
    /// <filterpriority>1</filterpriority>
    int CompareTo(Wrapperator.Interfaces.IVersion value);
  }
}
