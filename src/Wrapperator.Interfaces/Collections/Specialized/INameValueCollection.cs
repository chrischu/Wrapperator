//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wrapperator.Interfaces.Collections.Specialized
{
  
  
  /// <summary>Represents a collection of associated <see cref="T:System.String" /> keys and <see cref="T:System.String" /> values that can be accessed either with the key or with the index.</summary>
  public partial interface INameValueCollection
  {
    
    string[] AllKeys
    {
      get;
    }
    
    int Count
    {
      get;
    }
    
    string this[string name]
    {
      get;
      set;
    }
    
    string this[int index]
    {
      get;
    }
    
    System.Collections.Specialized.NameObjectCollectionBase.KeysCollection Keys
    {
      get;
    }
    
    /// <summary>Copies the entries in the specified <see cref="T:System.Collections.Specialized.NameValueCollection" /> to the current <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
    /// <param name="c">The <see cref="T:System.Collections.Specialized.NameValueCollection" /> to copy to the current <see cref="T:System.Collections.Specialized.NameValueCollection" />.</param>
    /// <exception cref="T:System.NotSupportedException">The collection is read-only.</exception>
    /// <exception cref="T:System.ArgumentNullException">
    ///  <paramref name="c" /> is null.</exception>
    void Add(System.Collections.Specialized.NameValueCollection c);
    
    /// <summary>Adds an entry with the specified name and value to the <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
    /// <param name="name">The <see cref="T:System.String" /> key of the entry to add. The key can be null.</param>
    /// <param name="value">The <see cref="T:System.String" /> value of the entry to add. The value can be null.</param>
    /// <exception cref="T:System.NotSupportedException">The collection is read-only. </exception>
    void Add(string name, string value);
    
    /// <summary>Invalidates the cached arrays and removes all entries from the <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
    /// <exception cref="T:System.NotSupportedException">The collection is read-only.</exception>
    void Clear();
    
    /// <summary>Copies the entire <see cref="T:System.Collections.Specialized.NameValueCollection" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</summary>
    /// <param name="dest">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Specialized.NameValueCollection" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
    /// <param name="index">The zero-based index in <paramref name="dest" /> at which copying begins.</param>
    /// <exception cref="T:System.ArgumentNullException">
    ///  <paramref name="dest" /> is null.</exception>
    /// <exception cref="T:System.ArgumentOutOfRangeException">
    ///  <paramref name="index" /> is less than zero.</exception>
    /// <exception cref="T:System.ArgumentException">
    ///  <paramref name="dest" /> is multidimensional.-or- The number of elements in the source <see cref="T:System.Collections.Specialized.NameValueCollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="dest" />.</exception>
    /// <exception cref="T:System.InvalidCastException">The type of the source <see cref="T:System.Collections.Specialized.NameValueCollection" /> cannot be cast automatically to the type of the destination <paramref name="dest" />.</exception>
    void CopyTo(System.Array dest, int index);
    
    /// <summary>Gets the values associated with the specified key from the <see cref="T:System.Collections.Specialized.NameValueCollection" /> combined into one comma-separated list.</summary>
    /// <returns>A <see cref="T:System.String" /> that contains a comma-separated list of the values associated with the specified key from the <see cref="T:System.Collections.Specialized.NameValueCollection" />, if found; otherwise, null.</returns>
    /// <param name="name">The <see cref="T:System.String" /> key of the entry that contains the values to get. The key can be null.</param>
    string Get(string name);
    
    /// <summary>Gets the values at the specified index of the <see cref="T:System.Collections.Specialized.NameValueCollection" /> combined into one comma-separated list.</summary>
    /// <returns>A <see cref="T:System.String" /> that contains a comma-separated list of the values at the specified index of the <see cref="T:System.Collections.Specialized.NameValueCollection" />, if found; otherwise, null.</returns>
    /// <param name="index">The zero-based index of the entry that contains the values to get from the collection.</param>
    /// <exception cref="T:System.ArgumentOutOfRangeException">
    ///  <paramref name="index" /> is outside the valid range of indexes for the collection.</exception>
    string Get(int index);
    
    /// <summary>Gets the key at the specified index of the <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
    /// <returns>A <see cref="T:System.String" /> that contains the key at the specified index of the <see cref="T:System.Collections.Specialized.NameValueCollection" />, if found; otherwise, null.</returns>
    /// <param name="index">The zero-based index of the key to get from the collection.</param>
    /// <exception cref="T:System.ArgumentOutOfRangeException">
    ///  <paramref name="index" /> is outside the valid range of indexes for the collection. </exception>
    string GetKey(int index);
    
    /// <summary>Gets the values associated with the specified key from the <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
    /// <returns>A <see cref="T:System.String" /> array that contains the values associated with the specified key from the <see cref="T:System.Collections.Specialized.NameValueCollection" />, if found; otherwise, null.</returns>
    /// <param name="name">The <see cref="T:System.String" /> key of the entry that contains the values to get. The key can be null.</param>
    string[] GetValues(string name);
    
    /// <summary>Gets the values at the specified index of the <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
    /// <returns>A <see cref="T:System.String" /> array that contains the values at the specified index of the <see cref="T:System.Collections.Specialized.NameValueCollection" />, if found; otherwise, null.</returns>
    /// <param name="index">The zero-based index of the entry that contains the values to get from the collection.</param>
    /// <exception cref="T:System.ArgumentOutOfRangeException">
    ///  <paramref name="index" /> is outside the valid range of indexes for the collection. </exception>
    string[] GetValues(int index);
    
    /// <summary>Gets a value indicating whether the <see cref="T:System.Collections.Specialized.NameValueCollection" /> contains keys that are not null.</summary>
    /// <returns>true if the <see cref="T:System.Collections.Specialized.NameValueCollection" /> contains keys that are not null; otherwise, false.</returns>
    bool HasKeys();
    
    /// <summary>Removes the entries with the specified key from the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</summary>
    /// <param name="name">The <see cref="T:System.String" /> key of the entry to remove. The key can be null.</param>
    /// <exception cref="T:System.NotSupportedException">The collection is read-only.</exception>
    void Remove(string name);
    
    /// <summary>Sets the value of an entry in the <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
    /// <param name="name">The <see cref="T:System.String" /> key of the entry to add the new value to. The key can be null.</param>
    /// <param name="value">The <see cref="T:System.Object" /> that represents the new value to add to the specified entry. The value can be null.</param>
    /// <exception cref="T:System.NotSupportedException">The collection is read-only.</exception>
    void Set(string name, string value);
  }
}
