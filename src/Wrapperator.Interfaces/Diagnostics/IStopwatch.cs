//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wrapperator.Interfaces.Diagnostics
{
  
  
  /// <summary>Provides a set of methods and properties that you can use to accurately measure elapsed time.</summary>
  /// <filterpriority>1</filterpriority>
  public interface IStopwatch
  {
    
    bool IsRunning
    {
      get;
    }
    
    System.TimeSpan Elapsed
    {
      get;
    }
    
    long ElapsedMilliseconds
    {
      get;
    }
    
    long ElapsedTicks
    {
      get;
    }
    
    /// <summary>Starts, or resumes, measuring elapsed time for an interval.</summary>
    /// <filterpriority>1</filterpriority>
    void Start();
    
    /// <summary>Stops measuring elapsed time for an interval.</summary>
    /// <filterpriority>1</filterpriority>
    void Stop();
    
    /// <summary>Stops time interval measurement and resets the elapsed time to zero.</summary>
    /// <filterpriority>1</filterpriority>
    void Reset();
    
    /// <summary>Stops time interval measurement, resets the elapsed time to zero, and starts measuring elapsed time.</summary>
    void Restart();
  }
}
